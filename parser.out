Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> assignment_statement
Rule 2     statement -> for_loop
Rule 3     statement -> if_statement
Rule 4     statement -> main_function
Rule 5     statement -> function_call
Rule 6     assignment_statement -> IDENTIFICADOR ASIGNACION CADENA
Rule 7     for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO COMA ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F
Rule 8     if_statement -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR OPERADOR_RELACIONAL ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F
Rule 9     main_function -> PALABRA_RESERVADA PARENTESIS_ABRIR PARENTESIS_CERRAR LLAVE_I LLAVE_F
Rule 10    function_call -> PALABRA_RESERVADA IDENTIFICADOR PARENTESIS_ABRIR parametros PARENTESIS_CERRAR LLAVE_I LLAVE_F
Rule 11    parametros -> IDENTIFICADOR
Rule 12    parametros -> ENTERO

Terminals, with rules where they appear

ASIGNACION           : 6
CADENA               : 6
COMA                 : 7 7
ENTERO               : 7 7 8 12
IDENTIFICADOR        : 6 7 8 10 11
LLAVE_F              : 7 8 9 10
LLAVE_I              : 7 8 9 10
OPERADOR_RELACIONAL  : 8
PALABRA_RESERVADA    : 7 8 9 10
PARENTESIS_ABRIR     : 7 8 9 10
PARENTESIS_CERRAR    : 7 8 9 10
error                : 

Nonterminals, with rules where they appear

assignment_statement : 1
for_loop             : 2
function_call        : 5
if_statement         : 3
main_function        : 4
parametros           : 10
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . assignment_statement
    (2) statement -> . for_loop
    (3) statement -> . if_statement
    (4) statement -> . main_function
    (5) statement -> . function_call
    (6) assignment_statement -> . IDENTIFICADOR ASIGNACION CADENA
    (7) for_loop -> . PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO COMA ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F
    (8) if_statement -> . PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR OPERADOR_RELACIONAL ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F
    (9) main_function -> . PALABRA_RESERVADA PARENTESIS_ABRIR PARENTESIS_CERRAR LLAVE_I LLAVE_F
    (10) function_call -> . PALABRA_RESERVADA IDENTIFICADOR PARENTESIS_ABRIR parametros PARENTESIS_CERRAR LLAVE_I LLAVE_F

    IDENTIFICADOR   shift and go to state 7
    PALABRA_RESERVADA shift and go to state 8

    statement                      shift and go to state 1
    assignment_statement           shift and go to state 2
    for_loop                       shift and go to state 3
    if_statement                   shift and go to state 4
    main_function                  shift and go to state 5
    function_call                  shift and go to state 6

state 1

    (0) S' -> statement .



state 2

    (1) statement -> assignment_statement .

    $end            reduce using rule 1 (statement -> assignment_statement .)


state 3

    (2) statement -> for_loop .

    $end            reduce using rule 2 (statement -> for_loop .)


state 4

    (3) statement -> if_statement .

    $end            reduce using rule 3 (statement -> if_statement .)


state 5

    (4) statement -> main_function .

    $end            reduce using rule 4 (statement -> main_function .)


state 6

    (5) statement -> function_call .

    $end            reduce using rule 5 (statement -> function_call .)


state 7

    (6) assignment_statement -> IDENTIFICADOR . ASIGNACION CADENA

    ASIGNACION      shift and go to state 9


state 8

    (7) for_loop -> PALABRA_RESERVADA . PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO COMA ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F
    (8) if_statement -> PALABRA_RESERVADA . PARENTESIS_ABRIR IDENTIFICADOR OPERADOR_RELACIONAL ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F
    (9) main_function -> PALABRA_RESERVADA . PARENTESIS_ABRIR PARENTESIS_CERRAR LLAVE_I LLAVE_F
    (10) function_call -> PALABRA_RESERVADA . IDENTIFICADOR PARENTESIS_ABRIR parametros PARENTESIS_CERRAR LLAVE_I LLAVE_F

    PARENTESIS_ABRIR shift and go to state 10
    IDENTIFICADOR   shift and go to state 11


state 9

    (6) assignment_statement -> IDENTIFICADOR ASIGNACION . CADENA

    CADENA          shift and go to state 12


state 10

    (7) for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR . IDENTIFICADOR COMA ENTERO COMA ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F
    (8) if_statement -> PALABRA_RESERVADA PARENTESIS_ABRIR . IDENTIFICADOR OPERADOR_RELACIONAL ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F
    (9) main_function -> PALABRA_RESERVADA PARENTESIS_ABRIR . PARENTESIS_CERRAR LLAVE_I LLAVE_F

    IDENTIFICADOR   shift and go to state 13
    PARENTESIS_CERRAR shift and go to state 14


state 11

    (10) function_call -> PALABRA_RESERVADA IDENTIFICADOR . PARENTESIS_ABRIR parametros PARENTESIS_CERRAR LLAVE_I LLAVE_F

    PARENTESIS_ABRIR shift and go to state 15


state 12

    (6) assignment_statement -> IDENTIFICADOR ASIGNACION CADENA .

    $end            reduce using rule 6 (assignment_statement -> IDENTIFICADOR ASIGNACION CADENA .)


state 13

    (7) for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR . COMA ENTERO COMA ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F
    (8) if_statement -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR . OPERADOR_RELACIONAL ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F

    COMA            shift and go to state 16
    OPERADOR_RELACIONAL shift and go to state 17


state 14

    (9) main_function -> PALABRA_RESERVADA PARENTESIS_ABRIR PARENTESIS_CERRAR . LLAVE_I LLAVE_F

    LLAVE_I         shift and go to state 18


state 15

    (10) function_call -> PALABRA_RESERVADA IDENTIFICADOR PARENTESIS_ABRIR . parametros PARENTESIS_CERRAR LLAVE_I LLAVE_F
    (11) parametros -> . IDENTIFICADOR
    (12) parametros -> . ENTERO

    IDENTIFICADOR   shift and go to state 19
    ENTERO          shift and go to state 21

    parametros                     shift and go to state 20

state 16

    (7) for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA . ENTERO COMA ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F

    ENTERO          shift and go to state 22


state 17

    (8) if_statement -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR OPERADOR_RELACIONAL . ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F

    ENTERO          shift and go to state 23


state 18

    (9) main_function -> PALABRA_RESERVADA PARENTESIS_ABRIR PARENTESIS_CERRAR LLAVE_I . LLAVE_F

    LLAVE_F         shift and go to state 24


state 19

    (11) parametros -> IDENTIFICADOR .

    PARENTESIS_CERRAR reduce using rule 11 (parametros -> IDENTIFICADOR .)


state 20

    (10) function_call -> PALABRA_RESERVADA IDENTIFICADOR PARENTESIS_ABRIR parametros . PARENTESIS_CERRAR LLAVE_I LLAVE_F

    PARENTESIS_CERRAR shift and go to state 25


state 21

    (12) parametros -> ENTERO .

    PARENTESIS_CERRAR reduce using rule 12 (parametros -> ENTERO .)


state 22

    (7) for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO . COMA ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F

    COMA            shift and go to state 26


state 23

    (8) if_statement -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR OPERADOR_RELACIONAL ENTERO . PARENTESIS_CERRAR LLAVE_I LLAVE_F

    PARENTESIS_CERRAR shift and go to state 27


state 24

    (9) main_function -> PALABRA_RESERVADA PARENTESIS_ABRIR PARENTESIS_CERRAR LLAVE_I LLAVE_F .

    $end            reduce using rule 9 (main_function -> PALABRA_RESERVADA PARENTESIS_ABRIR PARENTESIS_CERRAR LLAVE_I LLAVE_F .)


state 25

    (10) function_call -> PALABRA_RESERVADA IDENTIFICADOR PARENTESIS_ABRIR parametros PARENTESIS_CERRAR . LLAVE_I LLAVE_F

    LLAVE_I         shift and go to state 28


state 26

    (7) for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO COMA . ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F

    ENTERO          shift and go to state 29


state 27

    (8) if_statement -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR OPERADOR_RELACIONAL ENTERO PARENTESIS_CERRAR . LLAVE_I LLAVE_F

    LLAVE_I         shift and go to state 30


state 28

    (10) function_call -> PALABRA_RESERVADA IDENTIFICADOR PARENTESIS_ABRIR parametros PARENTESIS_CERRAR LLAVE_I . LLAVE_F

    LLAVE_F         shift and go to state 31


state 29

    (7) for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO COMA ENTERO . PARENTESIS_CERRAR LLAVE_I LLAVE_F

    PARENTESIS_CERRAR shift and go to state 32


state 30

    (8) if_statement -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR OPERADOR_RELACIONAL ENTERO PARENTESIS_CERRAR LLAVE_I . LLAVE_F

    LLAVE_F         shift and go to state 33


state 31

    (10) function_call -> PALABRA_RESERVADA IDENTIFICADOR PARENTESIS_ABRIR parametros PARENTESIS_CERRAR LLAVE_I LLAVE_F .

    $end            reduce using rule 10 (function_call -> PALABRA_RESERVADA IDENTIFICADOR PARENTESIS_ABRIR parametros PARENTESIS_CERRAR LLAVE_I LLAVE_F .)


state 32

    (7) for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO COMA ENTERO PARENTESIS_CERRAR . LLAVE_I LLAVE_F

    LLAVE_I         shift and go to state 34


state 33

    (8) if_statement -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR OPERADOR_RELACIONAL ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F .

    $end            reduce using rule 8 (if_statement -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR OPERADOR_RELACIONAL ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F .)


state 34

    (7) for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO COMA ENTERO PARENTESIS_CERRAR LLAVE_I . LLAVE_F

    LLAVE_F         shift and go to state 35


state 35

    (7) for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO COMA ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F .

    $end            reduce using rule 7 (for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO COMA ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F .)

