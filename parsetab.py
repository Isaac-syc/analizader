
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNACION CADENA COMA ENTERO IDENTIFICADOR LLAVE_F LLAVE_I OPERADOR_RELACIONAL PALABRA_RESERVADA PARENTESIS_ABRIR PARENTESIS_CERRARstatement : assignment_statement\n                    | for_loop\n                    | if_statement\n                    | main_function\n                    | function_callassignment_statement : IDENTIFICADOR ASIGNACION CADENAfor_loop : PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO COMA ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_Fif_statement : PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR OPERADOR_RELACIONAL ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_Fmain_function : PALABRA_RESERVADA PARENTESIS_ABRIR PARENTESIS_CERRAR LLAVE_I LLAVE_Ffunction_call : PALABRA_RESERVADA IDENTIFICADOR PARENTESIS_ABRIR parametros PARENTESIS_CERRAR LLAVE_I LLAVE_Fparametros : IDENTIFICADOR\n                    | ENTERO'
    
_lr_action_items = {'IDENTIFICADOR':([0,8,10,15,],[7,11,13,19,]),'PALABRA_RESERVADA':([0,],[8,]),'$end':([1,2,3,4,5,6,12,24,31,33,35,],[0,-1,-2,-3,-4,-5,-6,-9,-10,-8,-7,]),'ASIGNACION':([7,],[9,]),'PARENTESIS_ABRIR':([8,11,],[10,15,]),'CADENA':([9,],[12,]),'PARENTESIS_CERRAR':([10,19,20,21,23,29,],[14,-11,25,-12,27,32,]),'COMA':([13,22,],[16,26,]),'OPERADOR_RELACIONAL':([13,],[17,]),'LLAVE_I':([14,25,27,32,],[18,28,30,34,]),'ENTERO':([15,16,17,26,],[21,22,23,29,]),'LLAVE_F':([18,28,30,34,],[24,31,33,35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'assignment_statement':([0,],[2,]),'for_loop':([0,],[3,]),'if_statement':([0,],[4,]),'main_function':([0,],[5,]),'function_call':([0,],[6,]),'parametros':([15,],[20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> assignment_statement','statement',1,'p_statement','parseador.py',18),
  ('statement -> for_loop','statement',1,'p_statement','parseador.py',19),
  ('statement -> if_statement','statement',1,'p_statement','parseador.py',20),
  ('statement -> main_function','statement',1,'p_statement','parseador.py',21),
  ('statement -> function_call','statement',1,'p_statement','parseador.py',22),
  ('assignment_statement -> IDENTIFICADOR ASIGNACION CADENA','assignment_statement',3,'p_assignment_statement','parseador.py',26),
  ('for_loop -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR COMA ENTERO COMA ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F','for_loop',10,'p_for_loop','parseador.py',30),
  ('if_statement -> PALABRA_RESERVADA PARENTESIS_ABRIR IDENTIFICADOR OPERADOR_RELACIONAL ENTERO PARENTESIS_CERRAR LLAVE_I LLAVE_F','if_statement',8,'p_if_statement','parseador.py',37),
  ('main_function -> PALABRA_RESERVADA PARENTESIS_ABRIR PARENTESIS_CERRAR LLAVE_I LLAVE_F','main_function',5,'p_main_function','parseador.py',44),
  ('function_call -> PALABRA_RESERVADA IDENTIFICADOR PARENTESIS_ABRIR parametros PARENTESIS_CERRAR LLAVE_I LLAVE_F','function_call',7,'p_function_call','parseador.py',51),
  ('parametros -> IDENTIFICADOR','parametros',1,'p_parametros','parseador.py',58),
  ('parametros -> ENTERO','parametros',1,'p_parametros','parseador.py',59),
]
